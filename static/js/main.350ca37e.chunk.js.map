{"version":3,"sources":["Home.js","Event.js","Docs.js","Contact.js","mapStyles.js","Main.js","index.js"],"names":["Home","Component","Event","Docs","href","Contact","filename","separator","wrapColumnChar","columns","id","displayName","datas","first","second","text","MapWrapped","withScriptjs","withGoogleMap","useState","selectedPark","setSelectedPark","useEffect","listener","e","key","window","addEventListener","removeEventListener","defaultZoom","defaultCenter","lat","lng","options","styles","mapStyles","parkData","map","park","properties","PARK_ID","position","geometry","coordinates","onClick","icon","url","scaledSize","google","maps","Size","onCloseClick","NAME","DESCRIPTIO","Main","className","to","path","component","style","width","height","googleMapURL","loadingElement","containerElement","mapElement","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.350ca37e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n \nclass Home extends Component {\n  render() {\n    return (\n      <div>\n        <h2>Welcome to EDM Night 2020</h2>\n        <p></p>\n        <p></p>\n      </div>\n    );\n  }\n}\n \nexport default Home;","import React, { Component } from \"react\";\n \nclass Event extends Component {\n  render() {\n    return (\n      <div>\n        <h2>EDM NIGHT IN TORONTO</h2>\n        <p>Event Details: </p>\n        <ol>\n          <li>Location: Yonge-Dundas Square, Toronto</li>\n          <li>Date: 27th January 2020</li>\n          <li>Hours:6 PM - 10 PM</li>\n          <li>Artists: Deadmau5, Above and Beyond, TÃ¯esto </li>\n          <li>Accomodates: Approx 20K people</li>\n          <li>Bar: Budweiser, Corona, Stella Artois and Heineken available</li>\n          <li>Access types: GA, Staff, VIP, VVIP </li>\n          <li>Number of entraces:2</li>\n          <li>Number of Exits: 2</li>\n          <li>Number of lanes:10</li>\n          <li>Zones: Backstage, Stage, VVIP zone, VIP zone and GA zone</li>\n        \n        </ol>\n      </div>\n    );\n  }\n}\n \nexport default Event;","import React, { Component } from \"react\";\n \nclass Docs extends Component {\n  render() {\n    return (\n      <div>\n        <h2>Documentation:</h2>\n        <p>How to use:</p>\n        <ol>\n          <li>Download the code from <a href=\"https://github.com/deepakggn/react-googlemaps/tree/development\"> Github </a></li>\n          <li>Install npm and NodeJS </li>\n          <li>npm start</li>\n          <li>open http://localhost:3000</li>\n        </ol>\n        <p>Features: </p>\n        <ol>\n          <li>Single page application implementation using ReactJS.</li>\n          <li>Google maps integrated using Google maps cloud API. </li>\n          <li>Maps are customized using snazzymaps: helps with changing the map styles/colors.</li>\n          <li>Default map pointers are changed to pin icons.</li>\n          <li>Map data is pulled from a centralized jso file.</li>\n          <li>OnClick events: Info box is added to every map pointer for pointer description.</li>\n          <li>Routing: React routing is used to navigate through different pages of the App.</li>\n          <li>Export data: Event data can be using exported using Export to csv option. </li>\n        </ol>\n      </div>\n    );\n  }\n}\n \nexport default Docs;","import React, { Component } from \"react\";\nimport CsvDownloader from 'react-csv-downloader';\n\n\n\nclass Contact extends Component {\n  render() {\n    const columns = [{\n      id: 'first',\n      displayName: 'First column'\n    }, {\n      id: 'second',\n      displayName: 'Second column'\n    }];\n   \n    const datas = [{\n      first: 'Location',\n      second: 'Yone-Dundas Toronto'\n    }, {\n      first: 'Hours',\n      second: '6PM - 10PM'\n    }, {\n      first: 'Organiser',\n      second: 'Intellitix'\n    }, {\n      first: 'Sponsors',\n      second: 'Budweiser and Bell'\n    }, {\n      first: 'Bar',\n      second: 'Open to 19+'\n    }];\n\n    return (\n      \n      <div>\n              <h2>EXPORT YOUR EVENT DATA TO CSV</h2>\n              <p></p>\n              <CsvDownloader\n            filename=\"myfile\"\n            separator=\";\"\n            wrapColumnChar=\"'\"\n            columns={columns}\n            datas={datas}\n            text=\"EXPORT CSV\" />\n        <p></p>\n        <h2>GOT QUESTIONS?</h2>\n        <p>The easiest way to connect is via\n        <a href=\"https://www.linkedin.com/in/deepakdal\">  LinkedIn</a>.\n        </p>\n      \n    \n        </div>\n    );\n  }\n}\n \nexport default Contact;","export default [\n    {\n        \"featureType\": \"all\",\n        \"elementType\": \"labels.text.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#ffffff\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"all\",\n        \"elementType\": \"labels.text.stroke\",\n        \"stylers\": [\n            {\n                \"color\": \"#000000\"\n            },\n            {\n                \"lightness\": 13\n            }\n        ]\n    },\n    {\n        \"featureType\": \"administrative\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#000000\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"administrative\",\n        \"elementType\": \"geometry.stroke\",\n        \"stylers\": [\n            {\n                \"color\": \"#144b53\"\n            },\n            {\n                \"lightness\": 14\n            },\n            {\n                \"weight\": 1.4\n            }\n        ]\n    },\n    {\n        \"featureType\": \"administrative.locality\",\n        \"elementType\": \"all\",\n        \"stylers\": [\n            {\n                \"visibility\": \"on\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"administrative.locality\",\n        \"elementType\": \"labels.icon\",\n        \"stylers\": [\n            {\n                \"visibility\": \"on\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"landscape\",\n        \"elementType\": \"all\",\n        \"stylers\": [\n            {\n                \"color\": \"#08304b\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"poi\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#0c4152\"\n            },\n            {\n                \"lightness\": 5\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.highway\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#000000\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.highway\",\n        \"elementType\": \"geometry.stroke\",\n        \"stylers\": [\n            {\n                \"color\": \"#0b434f\"\n            },\n            {\n                \"lightness\": 25\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.arterial\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#000000\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.arterial\",\n        \"elementType\": \"geometry.stroke\",\n        \"stylers\": [\n            {\n                \"color\": \"#0b3d51\"\n            },\n            {\n                \"lightness\": 16\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.local\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#000000\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"transit\",\n        \"elementType\": \"all\",\n        \"stylers\": [\n            {\n                \"color\": \"#146474\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"water\",\n        \"elementType\": \"all\",\n        \"stylers\": [\n            {\n                \"color\": \"#021019\"\n            }\n        ]\n    }\n];","\nimport React, { useState, useEffect } from \"react\";\nimport Home from \"./Home\";\nimport Event from \"./Event\";\nimport Docs from \"./Docs\";\nimport Contact from \"./Contact\";\nimport {\n    Route,\n    NavLink,\n    HashRouter\n  } from \"react-router-dom\";\n\nimport {\n    withScriptjs,\n    withGoogleMap,\n    GoogleMap,\n    Marker,\n    InfoWindow,\n  } from \"react-google-maps\";\n  import mapStyles from './mapStyles'\n  import * as parkData from \"./data/parkData.json\";\n  \n  \n  function Map() {\n    const [selectedPark, setSelectedPark] = useState(null);\n  \n    useEffect(() => {\n      const listener = e => {\n        if (e.key === \"Escape\") {\n          setSelectedPark(null);\n        }\n      };\n      window.addEventListener(\"keydown\", listener);\n  \n      return () => {\n        window.removeEventListener(\"keydown\", listener);\n      };\n    }, []);\n  \n\n    return (\n      <GoogleMap\n        defaultZoom={19}\n        defaultCenter={{ lat: 43.6561, lng: -79.3802}}\n        options={{ styles: mapStyles }}\n      >\n        {parkData.features.map(park => (\n          <Marker\n            key={park.properties.PARK_ID}\n            position={{\n              lat: park.geometry.coordinates[1],\n              lng: park.geometry.coordinates[0]\n            }}\n            onClick={() => {\n              setSelectedPark(park);\n            }}\n            icon={{\n              url:  \"https://img.icons8.com/color/48/000000/map-pin.png\",\n              scaledSize: new window.google.maps.Size(50, 50)\n            }}\n          />\n        ))}\n  \n        {selectedPark && (\n          <InfoWindow\n            onCloseClick={() => {\n              setSelectedPark(null);\n            }}\n            position={{\n              lat: selectedPark.geometry.coordinates[1],\n              lng: selectedPark.geometry.coordinates[0]\n            }}\n          >\n            <div>\n              <h2>{selectedPark.properties.NAME}</h2>\n              <p>{selectedPark.properties.DESCRIPTIO}</p>\n            </div>\n          </InfoWindow>\n        )}\n      </GoogleMap>\n      \n    );\n  }\n  \n  const MapWrapped = withScriptjs(withGoogleMap(Map));\n  \n  export default function Main() {\n    return (\n        <HashRouter>\n        <div>\n          <h1>Google Maps Integration using ReactJS</h1>\n          <ul className=\"header\">\n            <li><NavLink to=\"/\">Home</NavLink></li>\n            <li><NavLink to=\"/event\">Event</NavLink></li>\n            <li><NavLink to=\"/docs\">Docs</NavLink></li>\n            <li><NavLink to=\"/contact\">Contact</NavLink></li>\n          </ul>\n          <div className=\"content\">\n            <Route path=\"/\" component={Home}/>\n            <Route path=\"/event\" component={Event}/>\n            <Route path=\"/docs\" component={Docs}/>\n            <Route path=\"/contact\" component={Contact}/>\n          </div>\n        </div>\n    \n  \n      <div style={{ width: \"97vw\", height: \"100vh\" }}>\n        <MapWrapped\n          googleMapURL={`https://maps.googleapis.com/maps/api/js?key=AIzaSyAzo9Xzk5QwuAixqF8Kxdxp1zgMfL2DtKA&v=3.exp&libraries=geometry,drawing,places}`}\n          loadingElement={<div style={{ height: `100%` }} />}\n          containerElement={<div style={{ height: `100%` }} />}\n          mapElement={<div style={{ height: `100%` }} />}\n        />\n      </div>\n      </HashRouter>\n    \n      );\n}\n  ","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Main from \"./Main\";\nimport \"./index.css\";\n\n\nReactDOM.render(\n  <Main/>, \n  document.getElementById(\"root\")\n);"],"sourceRoot":""}